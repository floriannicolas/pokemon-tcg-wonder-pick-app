html, body {
  background-color: #EFF9FE;
}

#root {
  max-width: 1280px;
  margin: 0 auto;
  padding: 2rem;
  text-align: center;
}

.content-cards {
  position: relative;
  width: 724px;
  height: 650px;
  margin: 0 auto;
  perspective: 2000px;
  transform-style: preserve-3d;
}

.card {
  position: absolute;
  transform-style: preserve-3d;
  backface-visibility: hidden;
  background-color: transparent;
  flex: 0 0 30%;
  width: 220px;
  height: 307px;
  perspective: 1000px;
  transition: all 0.8s;
}

.content-cards .card:nth-child(1) {
  top: 0;
  left: 0;
}

.content-cards .card:nth-child(2) {
  top: 0;
  left: 252px;
}

.content-cards .card:nth-child(3) {
  top: 0;
  left: 504px;
}

.content-cards .card:nth-child(4) {
  top: 339px;
  left: 126px;
}

.content-cards .card:nth-child(5) {
  top: 339px;
  left: 378px;
}

.card .card-inner {
  position: relative;
  width: 100%;
  height: 100%;
  text-align: center;
  transition: transform 0.8s;
  transform-style: preserve-3d;
}

.card .card-inner .front,
.card .card-inner .back {
  position: absolute;
  width: 100%;
  height: 100%;
  -webkit-backface-visibility: hidden; /* Safari */
  backface-visibility: hidden;
  background-position: center center;
  background-repeat: no-repeat;
  background-size: cover;
}

.card .card-inner .back {
  transform: rotateY(180deg);
}

.content-cards.flipped .card .card-inner {
  /* transform: rotateY(180deg); */
}

.content-cards.centered .card {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.content-cards.spread .card {
  --spread-distance: 1.0;
  --ellipse-width: 300px;
  --ellipse-height: 200px;
  --tilt-angle: -15deg;
  animation: spread-cards 0.35s ease-out forwards;
}

.content-cards.spread .card:nth-child(1) {
  --angle: 222deg;
}

.content-cards.spread .card:nth-child(2) {
  --angle: 294deg;
}

.content-cards.spread .card:nth-child(3) {
  --angle: 6deg;
}

.content-cards.spread .card:nth-child(4) {
  --angle: 78deg;
}

.content-cards.spread .card:nth-child(5) {
  --angle: 150deg;
}

@keyframes spread-cards {
  from {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) rotate(var(--tilt-angle));
    z-index: calc(5 + sin(var(--angle)));
  }
  to {
    top: 50%;
    left: 50%;
    transform:
      translate(-50%, -50%)
      rotate(var(--tilt-angle))
      translate(
        calc(var(--ellipse-width) * cos(var(--angle))),
        calc(var(--ellipse-height) * sin(var(--angle)))
      );
    z-index: calc(5 + sin(var(--angle)));
  }
}

/* Set original positions as CSS variables with row offsets */
.content-cards .card:nth-child(1) {
  --original-top: -20px;  /* 0px - 20px offset for top row */
  --original-left: 0;
}

.content-cards .card:nth-child(2) {
  --original-top: -20px;  /* 0px - 20px offset for top row */
  --original-left: 252px;
}

.content-cards .card:nth-child(3) {
  --original-top: -20px;  /* 0px - 20px offset for top row */
  --original-left: 504px;
}

.content-cards .card:nth-child(4) {
  --original-top: 359px;  /* 339px + 20px offset for bottom row */
  --original-left: 126px;
}

.content-cards .card:nth-child(5) {
  --original-top: 359px;  /* 339px + 20px offset for bottom row */
  --original-left: 378px;
}

.content-cards.selectable .card {
  cursor: pointer;
}

.content-cards .card.picked .card-inner {
  transform: rotateY(0deg);
}

@keyframes shuffled-card {
  0% {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) scale(1) rotate(-15deg);
    z-index: 5;
  }
  25% {
    top: 40%;  /* Higher position for the left side */
    left: 85%;
    transform: translate(-50%, -50%) scale(0.9) rotate(-15deg);
    z-index: 0;
  }
  50% {
    top: 52%;
    left: 50%;
    transform: translate(-50%, -50%) scale(0.7) rotate(-15deg);
    z-index: -5;
  }
  75% {
    top: 60%;  /* Lower position for the right side */
    left: 15%;
    transform: translate(-50%, -50%) scale(0.9) rotate(-15deg);
    z-index: 0;
  }
  100% {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) scale(1) rotate(-15deg);
    z-index: 5;
  }
}

.content-cards.shuffled .card {
  animation-duration: 0.8s;
  animation-name: shuffled-card;
  animation-timing-function: linear;
  animation-iteration-count: 2;
}

.content-cards.shuffled .card:nth-child(1) {
  animation-delay: 0s;
}

.content-cards.shuffled .card:nth-child(2) {
  animation-delay: 0.12s;
}

.content-cards.shuffled .card:nth-child(3) {
  animation-delay: 0.24s;
}

.content-cards.shuffled .card:nth-child(4) {
  animation-delay: 0.36s;
}

.content-cards.shuffled .card:nth-child(5) {
  animation-delay: 0.48s;
}

.content-actions {
  margin-top: 32px;
}

.content-cards.rotate .card {
  --ellipse-width: 300px;
  --ellipse-height: 200px;
  --tilt-angle: -15deg;
  position: absolute;
  top: 50%;
  left: 50%;
  animation: rotate-spread 1s linear infinite;
}

@keyframes rotate-spread {
  0% {
    transform:
      translate(-50%, -50%)
      rotate(var(--tilt-angle))
      translate(
        calc(var(--ellipse-width) * cos(var(--angle))),
        calc(var(--ellipse-height) * sin(var(--angle)))
      );
    z-index: calc(5 + sin(var(--angle)));
  }
  25% {
    transform:
      translate(-50%, -50%)
      rotate(var(--tilt-angle))
      translate(
        calc(var(--ellipse-width) * cos(calc(var(--angle) + 90deg))),
        calc(var(--ellipse-height) * sin(calc(var(--angle) + 90deg)))
      );
    z-index: calc(5 + sin(calc(var(--angle) + 90deg)));
  }
  50% {
    transform:
      translate(-50%, -50%)
      rotate(var(--tilt-angle))
      translate(
        calc(var(--ellipse-width) * cos(calc(var(--angle) + 180deg))),
        calc(var(--ellipse-height) * sin(calc(var(--angle) + 180deg)))
      );
    z-index: calc(5 + sin(calc(var(--angle) + 180deg)));
  }
  75% {
    transform:
      translate(-50%, -50%)
      rotate(var(--tilt-angle))
      translate(
        calc(var(--ellipse-width) * cos(calc(var(--angle) + 270deg))),
        calc(var(--ellipse-height) * sin(calc(var(--angle) + 270deg)))
      );
    z-index: calc(5 + sin(calc(var(--angle) + 270deg)));
  }
  100% {
    transform:
      translate(-50%, -50%)
      rotate(var(--tilt-angle))
      translate(
        calc(var(--ellipse-width) * cos(calc(var(--angle) + 360deg))),
        calc(var(--ellipse-height) * sin(calc(var(--angle) + 360deg)))
      );
    z-index: calc(5 + sin(calc(var(--angle) + 360deg)));
  }
}

/* Keep existing spread card angles */
.content-cards.rotate .card:nth-child(1) { --angle: 222deg; }
.content-cards.rotate .card:nth-child(2) { --angle: 294deg; }
.content-cards.rotate .card:nth-child(3) { --angle: 6deg; }
.content-cards.rotate .card:nth-child(4) { --angle: 78deg; }
.content-cards.rotate .card:nth-child(5) { --angle: 150deg; }
